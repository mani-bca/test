name: Terraform Infra Workflow

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
      action:
        description: 'Action to perform (apply, delete, plan, import)'
        required: true
        default: 'null'
        type: choice
        options:
          - plan
          - apply
          - delete
env:
  AWS_REGION: us-east-1
  TF_VERSION: '1.10.1'
  TF_VAR_environment: ${{ github.event.inputs.environment }}

permissions:
  id-token: write
  contents: read

jobs:
  infra-provision:
    name: Infra Provision
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        if: ${{ github.event.inputs.action != 'plan' }}
        run: terraform validate

      - name: Terraform Plan
        if: ${{ github.event.inputs.action == 'plan' }}
        run: |
          export TF_LOG=DEBUG
          export TF_LOG_PATH=$(pwd)/log.txt
          terraform plan

      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'apply' }}
        run: |
          export TF_LOG=DEBUG
          export TF_LOG_PATH=$(pwd)/log.txt
          terraform apply -auto-approve

      - name: Terraform Delete
        if: ${{ github.event.inputs.action == 'delete' }}
        run: |
          export TF_LOG=DEBUG
          export TF_LOG_PATH=$(pwd)/log.txt
          terraform destroy -auto-approve